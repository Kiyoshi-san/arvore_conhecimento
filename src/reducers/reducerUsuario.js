/* AQUI QUE NOS CONCENTRAREMOS TODOS OS NOSSOS REDUCERS */

/* PRECISAMOS IMPORTAR AS ACTIONS E AS ACTIONS CREATORS PARA O REDUCER VERIFICAR NOS CASES */
import { USUARIO_LOGIN_SUCESSO, USUARIO_LOGOUT } from "../actions";

/* 02/08/18 VERIFICAR PQ NAO TA CONSEGUINDO IMPORTAR 
O USUARIO_LOGIN_SUCESSO E O USUARIO_LOGOUT DA
F:\kiu\Projetos\ReactNative\series\src\actions\userActions.js
*/


/* COMO INITIAL STATE DEIXAREMOS NULL - SE O NOSSO USUARIO NAO EXISTE (NAO ESTA LOGADO) BASTA VER SE O "store.getState.usuario" É NULL */
export default function reducerUsuario(state = null, action) {
    
    switch (action.type) {
        /* USUARIO_LOGIN_SUCESSO É UM CASE QUE MTO PROVAVELMENTE VOU PRECISAR, POIS FAZ SENTIDO PARA UM REDUCER FAZER ALGO QDO UM USUARIO FOR LOGADO */
        case USUARIO_LOGIN_SUCESSO:
            /* CASO ESTEJA LOGADO, NAO COLOCAREMOS UM PARAMETRO "logado = true", BASTA TRAZER OS DADOS DELE */
            return action.usuario;

        /* TAMBEM FAZ SENTIDO O REDUCER FAZER ALGO QDO O USUARIO FOR DESLOGAOD */
        case USUARIO_LOGOUT:
            /* QDO DESLOGAR BASTA RETORNAR NULL, POIS ESTAMOS FZD A VERIFICAÇÃO EM "store.getState.usuario" EM QUE SE FOR NULL ELE ESTA DESLOGADO */
            return null;
        /* QUANDO O REDUCER NÃO SABE O QUE FAZER COM A "action" CAI AQUI NO "default" RETORNANDO O PROPRIO STATE - POR EXEMPLO SE O "reducerUsuario" RECEBER A ACTION "ADICIONAR_SERIE", ELE NAO TEM NADA A VER COM ESSA ACTION, PORTANTO VAI DEVOLVER O MESMO "state" */
        default:
            return state;
    }
}